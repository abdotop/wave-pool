// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package sqlc

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type ApiKey struct {
	ID         string             `json:"id"`
	BusinessID string             `json:"business_id"`
	Prefix     string             `json:"prefix"`
	KeyHash    string             `json:"key_hash"`
	Scopes     []string           `json:"scopes"`
	Env        string             `json:"env"`
	Status     pgtype.Text        `json:"status"`
	CreatedAt  pgtype.Timestamptz `json:"created_at"`
}

type B2bTransfer struct {
	ID           string             `json:"id"`
	BusinessID   string             `json:"business_id"`
	Counterparty string             `json:"counterparty"`
	Amount       string             `json:"amount"`
	Currency     string             `json:"currency"`
	Status       string             `json:"status"`
	Reference    pgtype.Text        `json:"reference"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
}

type Balance struct {
	BusinessID string `json:"business_id"`
	Available  string `json:"available"`
	Pending    string `json:"pending"`
	Currency   string `json:"currency"`
}

type Business struct {
	ID        string             `json:"id"`
	OwnerID   string             `json:"owner_id"`
	Name      string             `json:"name"`
	Country   string             `json:"country"`
	Currency  string             `json:"currency"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
}

type CheckoutSession struct {
	ID                  string             `json:"id"`
	BusinessID          string             `json:"business_id"`
	Amount              string             `json:"amount"`
	Currency            string             `json:"currency"`
	ClientReference     pgtype.Text        `json:"client_reference"`
	Status              string             `json:"status"`
	ErrorUrl            string             `json:"error_url"`
	SuccessUrl          string             `json:"success_url"`
	RestrictPayerMobile pgtype.Text        `json:"restrict_payer_mobile"`
	WaveLaunchUrl       pgtype.Text        `json:"wave_launch_url"`
	TransactionID       pgtype.Text        `json:"transaction_id"`
	PaymentStatus       pgtype.Text        `json:"payment_status"`
	LastPaymentError    []byte             `json:"last_payment_error"`
	ExpiresAt           pgtype.Timestamptz `json:"expires_at"`
	WhenCompleted       pgtype.Timestamptz `json:"when_completed"`
	WhenCreated         pgtype.Timestamptz `json:"when_created"`
}

type Payment struct {
	ID            string             `json:"id"`
	SessionID     string             `json:"session_id"`
	Amount        string             `json:"amount"`
	Currency      string             `json:"currency"`
	Status        string             `json:"status"`
	FailureReason pgtype.Text        `json:"failure_reason"`
	CompletedAt   pgtype.Timestamptz `json:"completed_at"`
	CreatedAt     pgtype.Timestamptz `json:"created_at"`
}

type User struct {
	ID        string             `json:"id"`
	Phone     string             `json:"phone"`
	PinHash   string             `json:"pin_hash"`
	Status    string             `json:"status"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
}

type Webhook struct {
	ID         string             `json:"id"`
	BusinessID string             `json:"business_id"`
	Url        string             `json:"url"`
	Strategy   string             `json:"strategy"`
	Secret     string             `json:"secret"`
	Events     []string           `json:"events"`
	Status     pgtype.Text        `json:"status"`
	CreatedAt  pgtype.Timestamptz `json:"created_at"`
}

type WebhookDelivery struct {
	ID         string             `json:"id"`
	WebhookID  string             `json:"webhook_id"`
	EventType  string             `json:"event_type"`
	Payload    []byte             `json:"payload"`
	Status     string             `json:"status"`
	HttpCode   pgtype.Int4        `json:"http_code"`
	Attempts   pgtype.Int4        `json:"attempts"`
	LastError  pgtype.Text        `json:"last_error"`
	SentAt     pgtype.Timestamptz `json:"sent_at"`
	ResponseMs pgtype.Int4        `json:"response_ms"`
}
